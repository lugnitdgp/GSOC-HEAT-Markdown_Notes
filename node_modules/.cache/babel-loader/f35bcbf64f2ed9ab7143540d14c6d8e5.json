{"ast":null,"code":"var _jsxFileName = \"/home/komal/GSOC_Markdown_Editor/src/Components/TextForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Remarkable } from 'remarkable';\nimport { db } from './fire';\nimport { collection, addDoc, getDocs, updateDoc, doc } from 'firebase/firestore';\nimport { getDatabase, ref, set } from \"firebase/database\"; //import {getFirestore} from 'firebase/firestore';\n// import {useHistory } from \"react-router-dom\";\n// import FormatBoldRoundedIcon from '@mui/icons-material/FormatBoldRounded';\n// import FormatItalicRoundedIcon from '@mui/icons-material/FormatItalicRounded';\n// import FormatUnderlinedRoundedIcon from '@mui/icons-material/FormatUnderlinedRounded';\n// import StrikethroughSRoundedIcon from '@mui/icons-material/StrikethroughSRounded';\n// import FormatColorTextIcon from '@mui/icons-material/FormatColorText';\n//import DownloadRoundedIcon from '@mui/icons-material/DownloadRounded';\n// import AbcRoundedIcon from '@mui/icons-material/AbcRounded';\n// import BackspaceRoundedIcon from '@mui/icons-material/BackspaceRounded';\n// import BeenhereRoundedIcon from '@mui/icons-material/BeenhereRounded';\n//import LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\n\nimport styled from 'styled-components'; //import Navigation from './Navigation';\n//import MobileNavigation from './MobileNavigation';\n//import NavLinks from './NavLinks'\n//import Navbar from './Navbar';\n//import \"firebase/storage\"\n\nimport Upperbar from './Upperbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Info = styled.div`\n  width: 100%;\n  color: black;\n  height: 1.2em;\n  font-weight: 700;\n  padding: 5px;\n  background-color: #fff;\n  text-align: end;\n  color: #a334cc;\n  font-family: roboto;\n  font-size: 15px;\n  margin-top: 60px;\n  margin-bottom: 0px;\n  \n  `;\n_c = Info;\nconst initialState = `\n  # Heading1\n  ## Heading2\n  - list item 1\n  - list item 2\n  - list item 3\n  \n  \n  [Visit GLUG Official website](https://nitdgplug.org/)\n\n  ### block of code\n  \\`\\`\\`\n  let x= 1;\n  let y= 2;\n  \\`\\`\\`\n  ***\n  *Welcome*\n  ![GLUG](https://img1.pnghut.com/t/25/23/10/AyxZpuifSG/penguin-ducks-geese-and-swans-linux-logical-volume-manager-flightless-bird.jpg)\n  \n  `;\nconst md = new Remarkable();\n\nfunction TextForm(props) {\n  _s();\n\n  const {\n    handleLogout\n  } = props;\n  const docId = props;\n  const [text, setText] = useState(initialState);\n  const [documents, setDocuments] = useState(\"\");\n  const userCollectionRef = collection(db, \"documents\");\n\n  const handleTextChange = e => {\n    setText(e.target.value);\n  }; //const [inputText,setInputText]= useState({input:\"\"});\n  //const {input} = text;\n\n\n  useEffect(() => {\n    const formData = localStorage.getItem(\"my-form-value1\");\n\n    if (formData) {\n      setText(JSON.parse(formData));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"my-form-value1\", JSON.stringify(text));\n  }); //attempt 1 CRUD\n  // const writeDatabase =()=>{\n  // const textRef = fire.database().ref(\"text\");\n  // const form = {\n  //   text,\n  //   complete: false,\n  // };\n  // textRef.push(form);\n  // };\n  //attempt 2 for CRUD Success\n  // function saveToDb(user,  email) {\n  //   const db = getDatabase();\n  //   set(ref(db, 'users/' + user), {\n  //     text: text,\n  //     email: email,\n  //   });\n  // }\n\n  useEffect(() => {\n    const getText = async () => {\n      const data = await getDocs(userCollectionRef); //console.log(data);\n\n      setDocuments(data.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    };\n\n    getText();\n  }, []);\n\n  const saveToDb = async () => {\n    await addDoc(userCollectionRef, {\n      file: text\n    });\n  };\n\n  const updateDocument = async id => {\n    const userDoc = doc(db, \"documents\", id);\n    const newFields = {\n      value: text\n    };\n    await updateDoc(userDoc, newFields);\n  }; // const save = (e) => {\n  //   e.preventdefault();\n  //   db.collection(\"documents\").doc()\n  // }\n  //atempt3\n  // const saveToDb = (e)=>{\n  //   e.preventDefault();\n  //     if (docId) {\n  //         db.collection(\"documents\").doc(docId).add({\n  //              text:text,\n  //             timestamp: db.firestore.FieldValue.serverTimestamp(),\n  //         });\n  //     }\n  //     setText(\"\");\n  // }\n  //    const [isBold, setIsBold] = useState(true);\n  //   const handleBoldClick = ()=>{\n  //     let output=document.querySelector(\".output1\")\n  //     if(isBold){\n  //       output.style.fontWeight = \"bold\"\n  //       setIsBold(false);\n  //     }else{\n  //       output.style.fontWeight = \"normal\"\n  //       setIsBold(true);\n  //     }\n  //  };\n  // const [isItalic, setIsItalic] =useState(true);\n  // const handleItalicClick = ()=>{\n  //    let output=document.querySelector(\".output1\")\n  //    if(isItalic){\n  //      output.style.fontStyle = \"italic\"\n  //      setIsItalic(false);\n  //     }else{\n  //       output.style.fontStyle = \"normal\"\n  //       setIsItalic(true);\n  //     }\n  // }; \n  // const [isUnderline, setIsUnderline]= useState(true);\n  // const handleUnderlineClick = ()=>{\n  //     let output=document.querySelector(\".output1\")\n  //     if(isUnderline){\n  //       output.style.textDecoration = \"underline\"\n  //       setIsUnderline(false);\n  //     } \n  //     else{\n  //       output.style.textDecoration= \"none\"\n  //       setIsUnderline(true);\n  //     }\n  // }\n  // const [isStrike , setIsStrike] = useState(true);\n  // const handleStrikeClick = ()=>{\n  //     let output = document.querySelector(\".output1\")\n  //     if(isStrike){\n  //       output.style.textDecoration = \"line-through\"\n  //       setIsStrike(false);\n  //     }\n  //     else{\n  //       output.style.textDecoration = \"none\"\n  //       setIsStrike(true);\n  //     }\n  // }\n  // const [isUpperCase, setIsUpperCase] = useState(true);\n  // const handleUpperClick = ()=>{\n  //     let output = document.querySelector(\".output1\")\n  //     if(isUpperCase){\n  //       output.style.textTransform = \"uppercase\"\n  //       setIsUpperCase(false);\n  //     }\n  //     else{\n  //     output.style.textTransform = \"none\"\n  //     setIsUpperCase(true);\n  //     }\n  // }\n  // const [isLowerCase, setIsLowerCase] = useState(true);\n  // const handleLowerClick = ()=>{\n  //     let output = document.querySelector(\".output1\")\n  //     if(isLowerCase){\n  //       output.style.textTransform = \"lowercase\"\n  //       setIsLowerCase(false);\n  //     }\n  //     else{\n  //       output.style.textTransform = \"none\"\n  //       setIsLowerCase(true);\n  //     }\n  //     }\n  //   const handleClearClick = ()=>{\n  //     console.log(\"Clear was clicked\"+ text);\n  //     let newText='';\n  //     setText(newText);\n  //   }\n  //   const getText = ()=>{\n  //     if(document.getSelection){\n  //       var text= document.getSelection().toString();\n  //       alert(text);\n  //     }\n  //     else{\n  //       if(document.selection){\n  //         var text2 = document.selection.createRange();\n  //         alert(text2);\n  //       }\n  //     }\n  //   }\n  // const [isColor, setIsColorCase] = useState(true);\n  // const handleColorClick = ()=>{\n  //   let output = document.querySelector(\".output1\")\n  //   if(isColor){\n  //     output.style.color= \"input\"\n  //     setIsColorCase(false);\n  //   }\n  //   else{\n  //     output.style.textTransform = \"none\"\n  //     setIsLowerCase(true);\n  //   }\n  //   }\n  // function downloadFile (filename,content){\n  //   const element = document.createElement('a');\n  //   const blob = new Blob([content], {type:'plain/txt'});\n  //   const fileURL = URL.createObjectURL(blob);\n  //   element.setAttribute('href',fileURL);\n  //   element.setAttribute('download',filename);\n  //   document.body.appendChild(element);\n  //   element.click();\n  //   document.body.removeChild(element);\n  // }\n  // window.onload = ()=>{\n  //   document.getElementsByClassName(\".button\").addEventListener('click', e=>{\n  //     const filename = document.getElementsByClassName(\".filename\").value;\n  //     const content = document.getElementsByClassName(\".output1\").value;\n  //     if(filename && content){\n  //       downloadFile(filename,content);\n  //     }\n  //   })\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entity\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logo\",\n            src: \"./images/text-tool.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headertext\",\n          children: \"Markdown \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button1\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save\",\n          onClick: saveToDb,\n          children: \"Save \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"update\",\n          onClick: () => {\n            updateDocument(doc.id);\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Info, {\n        children: [text.split(\" \").filter(element => {\n          return element.length !== 0;\n        }).length, \" words \", text.length, \" characters\", 0.008 * text.split(\" \").filter(element => {\n          return element.length !== 0;\n        }).length, \" minutes read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"complete\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"markdownheader\",\n              children: \"Markdown Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"textarea\",\n              label: \"markdown\",\n              id: \"markdown\",\n              placeholder: \"Type some text here\",\n              value: text,\n              onChange: handleTextChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"previewheader\",\n              children: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"output1\",\n              dangerouslySetInnerHTML: {\n                __html: md.render(text)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(TextForm, \"trD3S5aZ2M+ReDEl76oq38Q8thI=\");\n\n_c2 = TextForm;\nexport default TextForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Info\");\n$RefreshReg$(_c2, \"TextForm\");","map":{"version":3,"names":["React","useState","useEffect","Remarkable","db","collection","addDoc","getDocs","updateDoc","doc","getDatabase","ref","set","styled","Upperbar","Info","div","initialState","md","TextForm","props","handleLogout","docId","text","setText","documents","setDocuments","userCollectionRef","handleTextChange","e","target","value","formData","localStorage","getItem","JSON","parse","setItem","stringify","getText","data","docs","map","id","saveToDb","file","updateDocument","userDoc","newFields","split","filter","element","length","__html","render"],"sources":["/home/komal/GSOC_Markdown_Editor/src/Components/TextForm.js"],"sourcesContent":["  import React from 'react'\n  import  {useState,useEffect} from 'react';\n  import { Remarkable } from 'remarkable';\n  import {db} from './fire';\n  import {collection, addDoc, getDocs, updateDoc ,doc} from 'firebase/firestore';\n  import { getDatabase, ref, set } from \"firebase/database\";\n  //import {getFirestore} from 'firebase/firestore';\n  \n  // import {useHistory } from \"react-router-dom\";\n  // import FormatBoldRoundedIcon from '@mui/icons-material/FormatBoldRounded';\n  // import FormatItalicRoundedIcon from '@mui/icons-material/FormatItalicRounded';\n  // import FormatUnderlinedRoundedIcon from '@mui/icons-material/FormatUnderlinedRounded';\n  // import StrikethroughSRoundedIcon from '@mui/icons-material/StrikethroughSRounded';\n  // import FormatColorTextIcon from '@mui/icons-material/FormatColorText';\n  //import DownloadRoundedIcon from '@mui/icons-material/DownloadRounded';\n  // import AbcRoundedIcon from '@mui/icons-material/AbcRounded';\n  // import BackspaceRoundedIcon from '@mui/icons-material/BackspaceRounded';\n  // import BeenhereRoundedIcon from '@mui/icons-material/BeenhereRounded';\n   //import LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\n   import styled from 'styled-components';\n   //import Navigation from './Navigation';\n   //import MobileNavigation from './MobileNavigation';\n   //import NavLinks from './NavLinks'\n   //import Navbar from './Navbar';\n   //import \"firebase/storage\"\n   import Upperbar from './Upperbar';\n\n   \n  \n\n \n  \n  const Info = styled.div`\n  width: 100%;\n  color: black;\n  height: 1.2em;\n  font-weight: 700;\n  padding: 5px;\n  background-color: #fff;\n  text-align: end;\n  color: #a334cc;\n  font-family: roboto;\n  font-size: 15px;\n  margin-top: 60px;\n  margin-bottom: 0px;\n  \n  `\n  const initialState = `\n  # Heading1\n  ## Heading2\n  - list item 1\n  - list item 2\n  - list item 3\n  \n  \n  [Visit GLUG Official website](https://nitdgplug.org/)\n\n  ### block of code\n  \\`\\`\\`\n  let x= 1;\n  let y= 2;\n  \\`\\`\\`\n  ***\n  *Welcome*\n  ![GLUG](https://img1.pnghut.com/t/25/23/10/AyxZpuifSG/penguin-ducks-geese-and-swans-linux-logical-volume-manager-flightless-bird.jpg)\n  \n  `;\n\n\n  const md= new Remarkable ()\n  function TextForm(props) {\n    const{handleLogout}=props;\n    const docId = props;\n    const [text, setText] = useState(initialState);\n    const [documents, setDocuments] = useState(\"\");\n    const userCollectionRef = collection(db, \"documents\");\n    const handleTextChange = (e)=>{\n      setText(e.target.value)\n    }\n    //const [inputText,setInputText]= useState({input:\"\"});\n    //const {input} = text;\n    useEffect(()=>{\n     const formData = localStorage.getItem(\"my-form-value1\");\n     if (formData)\n     {setText(JSON.parse(formData));}\n    },[]);\n    useEffect(() => {\n      \n      localStorage.setItem(\"my-form-value1\",JSON.stringify(text));\n    });\n    //attempt 1 CRUD\n    // const writeDatabase =()=>{\n    // const textRef = fire.database().ref(\"text\");\n    // const form = {\n    //   text,\n    //   complete: false,\n    // };\n    // textRef.push(form);\n    // };\n    \n    //attempt 2 for CRUD Success\n    // function saveToDb(user,  email) {\n    //   const db = getDatabase();\n    //   set(ref(db, 'users/' + user), {\n    //     text: text,\n    //     email: email,\n        \n    //   });\n    // }\n     useEffect(()=>{\n      const getText = async () => {\n        const data = await getDocs(userCollectionRef);\n         //console.log(data);\n        setDocuments(data.docs.map((doc)=>({...doc.data(), id:doc.id})));\n      };\n      getText();\n     }, []);\n   \n     const saveToDb = async ()=>{\n      await addDoc(userCollectionRef, {file:text});\n    }\n     const updateDocument = async (id)=>{\n      const userDoc = doc(db , \"documents\" , id)\n      const newFields= { value: text}\n      await updateDoc(userDoc, newFields)\n     };\n\n    // const save = (e) => {\n    //   e.preventdefault();\n\n    //   db.collection(\"documents\").doc()\n    // }\n\n    //atempt3\n    // const saveToDb = (e)=>{\n    //   e.preventDefault();\n\n    //     if (docId) {\n    //         db.collection(\"documents\").doc(docId).add({\n    //              text:text,\n    //             timestamp: db.firestore.FieldValue.serverTimestamp(),\n                \n                \n    //         });\n    //     }\n    //     setText(\"\");\n    // }\n\n\n//    const [isBold, setIsBold] = useState(true);\n\n//   const handleBoldClick = ()=>{\n//     let output=document.querySelector(\".output1\")\n//     if(isBold){\n//       output.style.fontWeight = \"bold\"\n//       setIsBold(false);\n//     }else{\n//       output.style.fontWeight = \"normal\"\n//       setIsBold(true);\n//     }\n//  };\n// const [isItalic, setIsItalic] =useState(true);\n// const handleItalicClick = ()=>{\n//    let output=document.querySelector(\".output1\")\n//    if(isItalic){\n//      output.style.fontStyle = \"italic\"\n//      setIsItalic(false);\n//     }else{\n//       output.style.fontStyle = \"normal\"\n//       setIsItalic(true);\n//     }\n// }; \n// const [isUnderline, setIsUnderline]= useState(true);\n// const handleUnderlineClick = ()=>{\n//     let output=document.querySelector(\".output1\")\n//     if(isUnderline){\n//       output.style.textDecoration = \"underline\"\n//       setIsUnderline(false);\n//     } \n//     else{\n//       output.style.textDecoration= \"none\"\n//       setIsUnderline(true);\n//     }\n// }\n// const [isStrike , setIsStrike] = useState(true);\n// const handleStrikeClick = ()=>{\n//     let output = document.querySelector(\".output1\")\n//     if(isStrike){\n//       output.style.textDecoration = \"line-through\"\n//       setIsStrike(false);\n//     }\n//     else{\n//       output.style.textDecoration = \"none\"\n//       setIsStrike(true);\n//     }\n// }\n// const [isUpperCase, setIsUpperCase] = useState(true);\n// const handleUpperClick = ()=>{\n//     let output = document.querySelector(\".output1\")\n//     if(isUpperCase){\n//       output.style.textTransform = \"uppercase\"\n//       setIsUpperCase(false);\n//     }\n//     else{\n//     output.style.textTransform = \"none\"\n//     setIsUpperCase(true);\n//     }\n// }\n// const [isLowerCase, setIsLowerCase] = useState(true);\n// const handleLowerClick = ()=>{\n//     let output = document.querySelector(\".output1\")\n//     if(isLowerCase){\n//       output.style.textTransform = \"lowercase\"\n//       setIsLowerCase(false);\n      \n//     }\n//     else{\n//       output.style.textTransform = \"none\"\n//       setIsLowerCase(true);\n//     }\n//     }\n    \n  //   const handleClearClick = ()=>{\n      \n  //     console.log(\"Clear was clicked\"+ text);\n  //     let newText='';\n  //     setText(newText);\n  //   }\n  //   const getText = ()=>{\n  //     if(document.getSelection){\n  //       var text= document.getSelection().toString();\n  //       alert(text);\n  //     }\n  //     else{\n  //       if(document.selection){\n  //         var text2 = document.selection.createRange();\n  //         alert(text2);\n  //       }\n  //     }\n  //   }\n\n  // const [isColor, setIsColorCase] = useState(true);\n  // const handleColorClick = ()=>{\n  //   let output = document.querySelector(\".output1\")\n  //   if(isColor){\n  //     output.style.color= \"input\"\n  //     setIsColorCase(false);\n      \n  //   }\n  //   else{\n  //     output.style.textTransform = \"none\"\n  //     setIsLowerCase(true);\n  //   }\n  //   }\n  // function downloadFile (filename,content){\n  //   const element = document.createElement('a');\n  //   const blob = new Blob([content], {type:'plain/txt'});\n  //   const fileURL = URL.createObjectURL(blob);\n  //   element.setAttribute('href',fileURL);\n  //   element.setAttribute('download',filename);\n  //   document.body.appendChild(element);\n  //   element.click();\n  //   document.body.removeChild(element);\n  // }\n  // window.onload = ()=>{\n  //   document.getElementsByClassName(\".button\").addEventListener('click', e=>{\n  //     const filename = document.getElementsByClassName(\".filename\").value;\n  //     const content = document.getElementsByClassName(\".output1\").value;\n  //     if(filename && content){\n  //       downloadFile(filename,content);\n  //     }\n  //   })\n  // }\n \n  \n    return (\n      \n        <>\n        <div className='entity'>    \n       \n        {/* <Navbar/> */}\n    <div className='header'>\n      <div><img className='logo' src='./images/text-tool.png'/></div>\n      <div className='headertext'>Markdown </div>\n      <button className='button1'onClick={handleLogout}>Logout</button>\n      <button className='save' onClick={saveToDb}>Save </button>\n      <button className='update' onClick={()=>{updateDocument(doc.id)}}>Update</button>\n      </div>   \n    <Info>\n      {text.split(\" \").filter((element)=>{return element.length!==0}).length} words {text.length} characters\n      {0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length} minutes read\n      </Info>\n\n      {/* <div className='save'><button className=\"download\"onClick={downloadFile}><DownloadRoundedIcon/></button>               \n                <input type=\"text\" className=\"filename\" placeholder='untitled'></input></div> */}\n     <div className='main'>           \n    <div className='complete'>\n    <div className='container1'>\n    <div className='markdownheader'>Markdown Text</div>\n     <textarea name='textarea' \n               label='markdown' \n               id='markdown'  \n               placeholder='Type some text here' \n               value={text} \n               onChange={handleTextChange}\n    ></textarea>\n         </div>\n        \n        <div className='container2'>        \n         <div className='previewheader'>Preview</div>\n       <div className=\"output1\" dangerouslySetInnerHTML={{__html:md.render(text)}}></div>\n       \n       </div>\n       </div>\n   \n       \n       </div> \n       </div>\n       </>\n   \n     \n    )\n  }\n  \n  export default TextForm\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}